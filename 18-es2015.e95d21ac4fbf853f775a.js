(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{GEMM:function(e,t,n){"use strict";n.r(t),n.d(t,"ServicesDocModule",(function(){return h}));var a=n("2kYt"),l=n("PCNd"),r=n("sEIs"),m=n("EM62"),o=n("KZIX");let i=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-caching-service"]],decls:89,vars:0,consts:[["label","Overview"],[1,"api-description"],["label","API"],[1,"compact"],[1,"mat-caption"],[1,"api-table"],[1,"api-header-row"]],template:function(e,t){1&e&&(m["\u0275\u0275elementStart"](0,"mat-tab-group"),m["\u0275\u0275elementStart"](1,"mat-tab",0),m["\u0275\u0275elementStart"](2,"h3"),m["\u0275\u0275text"](3,"Caching Services Overview"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](4,"div",1),m["\u0275\u0275text"](5," The cache services are configured to have an easily swappable global point to a caching strategy. The caching services provided store items locally with different strategies, whether it is in-memory, which only persists until the app closes, localStorage, which persists between sessions but can only handle small amounts of data well, or indexedDB, which handles large amounts of structured data better. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](6,"div",1),m["\u0275\u0275text"](7," All stores are assumed to function as if they were either plain Javascript objects if the store can support it, like in-memory, or JSON objects if they cannot support plain Javascript objects. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](8,"div",1),m["\u0275\u0275text"](9," As part of every default store's implementation, it can store an expiration date for any data within the store. Expired data will be treated as if it weren't there at all. Expiration dates should only be used to keep data from being stale. On its own, it should not be used as a memory cleaning strategy. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](10,"mat-tab",2),m["\u0275\u0275elementStart"](11,"h3"),m["\u0275\u0275text"](12,"Caching Services API"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](13,"div",1),m["\u0275\u0275text"](14," This API won't explain much about the inner workings of each of the cache services, instead focusing on the purpose of each function within the service, as that will be more important for using it and creating new cache services for particular use-cases. All functionality within all cache services is asynchronous. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](15,"section"),m["\u0275\u0275elementStart"](16,"h4",3),m["\u0275\u0275text"](17,"initialize"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](18,"div",4),m["\u0275\u0275text"](19,"Sets up the store to be ready for use, and is usually done in a root component or in an Angular "),m["\u0275\u0275elementStart"](20,"code"),m["\u0275\u0275text"](21,"APP_INITIALIZER"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,". This is not intended as a destructive action, and should not touch parts of the store that already exist. Initialize is a noop if called a secondtime. Expect this to return all of the stores that were initialized, and expect it to error if one or more stores did not initialize. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](23,"section"),m["\u0275\u0275elementStart"](24,"h4",3),m["\u0275\u0275text"](25,"getAllStoreInfo"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](26,"div",4),m["\u0275\u0275text"](27,"Returns a quick summary of the data stored within the whole store, telling all of the stores and how many items are in each store. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](28,"section"),m["\u0275\u0275elementStart"](29,"h4",3),m["\u0275\u0275text"](30,"getStoreInfo"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](31,"div",4),m["\u0275\u0275text"](32,"Acts as getAllStoreInfo, but takes and returns the information on a single store. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](33,"section"),m["\u0275\u0275elementStart"](34,"h4",3),m["\u0275\u0275text"](35,"get"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](36,"div",4),m["\u0275\u0275text"](37,"Given a storeName and a key within that store, get the value of that key. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](38,"section"),m["\u0275\u0275elementStart"](39,"h4",3),m["\u0275\u0275text"](40,"getMany"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](41,"div",4),m["\u0275\u0275text"](42,"Given a storeName and a multiple keys within that store, get the value of all of those keys. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](43,"section"),m["\u0275\u0275elementStart"](44,"h4",3),m["\u0275\u0275text"](45,"getAll"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](46,"div",4),m["\u0275\u0275text"](47,"Given a storeName, get the value of all of the keys in that store. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](48,"section"),m["\u0275\u0275elementStart"](49,"h4",3),m["\u0275\u0275text"](50,"addOrUpdate"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](51,"div",4),m["\u0275\u0275text"](52,"Updates or adds a key with data into a specific store."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](53,"table",5),m["\u0275\u0275elementStart"](54,"tr",6),m["\u0275\u0275elementStart"](55,"th"),m["\u0275\u0275text"](56,"Parameter"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](57,"th"),m["\u0275\u0275text"](58,"Purpose"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](59,"tr"),m["\u0275\u0275elementStart"](60,"td"),m["\u0275\u0275text"](61,"storeName"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](62,"td"),m["\u0275\u0275text"](63,"Identifies the chosen store"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](64,"tr"),m["\u0275\u0275elementStart"](65,"td"),m["\u0275\u0275text"](66,"key"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](67,"td"),m["\u0275\u0275text"](68,"Which key in the given store to update"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](69,"tr"),m["\u0275\u0275elementStart"](70,"td"),m["\u0275\u0275text"](71,"data"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](72,"td"),m["\u0275\u0275text"](73,"The data to be added. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](74,"tr"),m["\u0275\u0275elementStart"](75,"td"),m["\u0275\u0275text"](76,"expiry(optional)"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](77,"td"),m["\u0275\u0275text"](78,"If given, the key will be ignored and removed from store at the first access attempt after the expiryDate. None of the default stores are configured to manage expiryDates outside of the cache service, so this by itself is not a sufficent memory management tool. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](79,"section"),m["\u0275\u0275elementStart"](80,"h4",3),m["\u0275\u0275text"](81,"delete"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](82,"div",4),m["\u0275\u0275text"](83,"Given a storeName and a key, delete the value of that key. Will emit true if successful, and an error if it fails. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](84,"section"),m["\u0275\u0275elementStart"](85,"h4",3),m["\u0275\u0275text"](86,"clearStore"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](87,"div",4),m["\u0275\u0275text"](88,"Given a store, removes all of the data from the store. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"]())},directives:[o.c,o.a],encapsulation:2,changeDetection:0}),e})();var d=n("zmEM");const s=[{path:"",children:[{path:"dom-inspector",component:(()=>{class e{constructor(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-dom-inspector"]],decls:102,vars:0,consts:[["label","Overview"],[1,"api-description"],["label","API"],[1,"compact"],[1,"api-table"],[1,"api-header-row"]],template:function(e,t){1&e&&(m["\u0275\u0275elementStart"](0,"mat-tab-group"),m["\u0275\u0275elementStart"](1,"mat-tab",0),m["\u0275\u0275elementStart"](2,"h3"),m["\u0275\u0275text"](3,"DomInspectorService Overview"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](4,"div",1),m["\u0275\u0275text"](5," The "),m["\u0275\u0275elementStart"](6,"code"),m["\u0275\u0275text"](7,"DomInspectorService"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](8," serves as an abstraction layer between components and their descendant elements; allowing the logic within a component's code to obtain information about those descendant elements. Angular's "),m["\u0275\u0275elementStart"](9,"code"),m["\u0275\u0275text"](10,"Renderer2"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](11," service allows elements to be manipulated in an abstract way, but fails to provide a means to obtain information about those elements. The "),m["\u0275\u0275elementStart"](12,"code"),m["\u0275\u0275text"](13,"DomInspectorService"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14," is meant to fill that gap. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](15,"mat-tab",2),m["\u0275\u0275elementStart"](16,"h3"),m["\u0275\u0275text"](17,"DomInspectorService Methods"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](18,"section"),m["\u0275\u0275elementStart"](19,"h4",3),m["\u0275\u0275text"](20,"querySelector"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](21,"mat-divider"),m["\u0275\u0275elementStart"](22,"div",1),m["\u0275\u0275text"](23,"Returns the first element that is a descendant of "),m["\u0275\u0275elementStart"](24,"code"),m["\u0275\u0275text"](25,"el"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](26," that matches selector(s)."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](27,"br"),m["\u0275\u0275elementStart"](28,"h5",3),m["\u0275\u0275text"](29,"Arguments"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](30,"table",4),m["\u0275\u0275elementStart"](31,"tr",5),m["\u0275\u0275elementStart"](32,"th"),m["\u0275\u0275text"](33,"Name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](34,"th"),m["\u0275\u0275text"](35,"Description"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](36,"tr"),m["\u0275\u0275elementStart"](37,"td"),m["\u0275\u0275text"](38,"el"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](39,"td"),m["\u0275\u0275text"](40,"The element whose descendants are to be queried."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](41,"tr"),m["\u0275\u0275elementStart"](42,"td"),m["\u0275\u0275text"](43,"selector"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](44,"td"),m["\u0275\u0275text"](45,"The selector(s) used to query for descendants of "),m["\u0275\u0275elementStart"](46,"code"),m["\u0275\u0275text"](47,"el"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](49,"br"),m["\u0275\u0275elementStart"](50,"section"),m["\u0275\u0275elementStart"](51,"h4",3),m["\u0275\u0275text"](52,"getBoundingBox"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](53,"mat-divider"),m["\u0275\u0275elementStart"](54,"div",1),m["\u0275\u0275text"](55,"Returns an object representing the bounding box of the element."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](56,"br"),m["\u0275\u0275elementStart"](57,"h5",3),m["\u0275\u0275text"](58,"Arguments"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](59,"table",4),m["\u0275\u0275elementStart"](60,"tr",5),m["\u0275\u0275elementStart"](61,"th"),m["\u0275\u0275text"](62,"Name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](63,"th"),m["\u0275\u0275text"](64,"Description"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](65,"tr"),m["\u0275\u0275elementStart"](66,"td"),m["\u0275\u0275text"](67,"el"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](68,"td"),m["\u0275\u0275text"](69,"The element from which to obtain the bounding box."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](70,"tr"),m["\u0275\u0275elementStart"](71,"td"),m["\u0275\u0275text"](72,"<return value>: DOMRect"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](73,"td"),m["\u0275\u0275elementStart"](74,"h6",3),m["\u0275\u0275text"](75,"Properties"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](76,"table",4),m["\u0275\u0275elementStart"](77,"tr",5),m["\u0275\u0275elementStart"](78,"th"),m["\u0275\u0275text"](79,"Name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](80,"th"),m["\u0275\u0275text"](81,"Description"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](82,"tr"),m["\u0275\u0275elementStart"](83,"td"),m["\u0275\u0275text"](84,"x"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](85,"td"),m["\u0275\u0275text"](86,"The horizontal coordinate of the position of the element."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](87,"tr"),m["\u0275\u0275elementStart"](88,"td"),m["\u0275\u0275text"](89,"y"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](90,"td"),m["\u0275\u0275text"](91,"The vertical coordinate of the position of the element."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](92,"tr"),m["\u0275\u0275elementStart"](93,"td"),m["\u0275\u0275text"](94,"width"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](95,"td"),m["\u0275\u0275text"](96,"The width of the element's bounding box."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](97,"tr"),m["\u0275\u0275elementStart"](98,"td"),m["\u0275\u0275text"](99,"height"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](100,"td"),m["\u0275\u0275text"](101,"The height of the element's bounding box."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"]())},directives:[o.c,o.a,d.a],encapsulation:2,changeDetection:0}),e})()},{path:"caching-service",component:i},{path:"theme-service",component:(()=>{class e{constructor(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-theme-service-doc"]],decls:45,vars:0,consts:[["label","Overview"],[1,"api-description"],["label","API"],[1,"mat-caption"],[1,"compact"],[1,"api-table"],[1,"api-header-row"]],template:function(e,t){1&e&&(m["\u0275\u0275elementStart"](0,"mat-tab-group"),m["\u0275\u0275elementStart"](1,"mat-tab",0),m["\u0275\u0275elementStart"](2,"h3"),m["\u0275\u0275text"](3,"ThemeService Overview"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](4,"div",1),m["\u0275\u0275text"](5," The "),m["\u0275\u0275elementStart"](6,"code"),m["\u0275\u0275text"](7,"ThemeService"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](8," is a centralized, injectable state coordination service that serves as a single source of truth for the currently selected theme within Phoenix-based Angular applications. Components can subscribe to this observable state and react when the theme is changed. The currently selected theme can also be updated via this service. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](9,"mat-tab",2),m["\u0275\u0275elementStart"](10,"h3"),m["\u0275\u0275text"](11,"ThemeService Properties"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](12,"mat-divider"),m["\u0275\u0275elementStart"](13,"section"),m["\u0275\u0275elementStart"](14,"h4"),m["\u0275\u0275text"](15,"theme$: Observable<string>"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](16,"div",3),m["\u0275\u0275text"](17," Observable state that emits the currently selected theme. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](18,"br"),m["\u0275\u0275elementStart"](19,"h3"),m["\u0275\u0275text"](20,"ThemeService Methods"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](21,"mat-divider"),m["\u0275\u0275elementStart"](22,"section"),m["\u0275\u0275elementStart"](23,"h4"),m["\u0275\u0275text"](24,"setTheme"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](25,"mat-divider"),m["\u0275\u0275elementStart"](26,"div",1),m["\u0275\u0275text"](27," Updates the currently selected theme and causes the "),m["\u0275\u0275elementStart"](28,"code"),m["\u0275\u0275text"](29,"theme$"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30," property to emit the newly selected theme class. "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275element"](31,"br"),m["\u0275\u0275elementStart"](32,"h5",4),m["\u0275\u0275text"](33,"Arguments"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](34,"table",5),m["\u0275\u0275elementStart"](35,"tr",6),m["\u0275\u0275elementStart"](36,"th"),m["\u0275\u0275text"](37,"Name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](38,"th"),m["\u0275\u0275text"](39,"Description"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](40,"tr"),m["\u0275\u0275elementStart"](41,"td"),m["\u0275\u0275text"](42,"themeClass: string"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementStart"](43,"td"),m["\u0275\u0275text"](44,"The CSS class for the desired theme."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"](),m["\u0275\u0275elementEnd"]())},directives:[o.c,o.a,d.a],encapsulation:2,changeDetection:0}),e})()},{path:"content-resize-observer",loadChildren:()=>Promise.all([n.e(0),n.e(1),n.e(17)]).then(n.bind(null,"6zcx")).then(e=>e.ContentResizeObserverDocModule)},{path:"toast-service",loadChildren:()=>Promise.all([n.e(0),n.e(1),n.e(19)]).then(n.bind(null,"keA1")).then(e=>e.ToastServiceDocModule)}]}];let c=(()=>{class e{}return e.\u0275mod=m["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=m["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[r.l.forChild(s)],r.l]}),e})(),h=(()=>{class e{}return e.\u0275mod=m["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=m["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[a.c,l.a,c]]}),e})()}}]);