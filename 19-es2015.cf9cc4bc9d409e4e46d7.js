(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{keA1:function(e,t,s){"use strict";s.r(t),s.d(t,"ToastServiceDocModule",(function(){return I}));var a=s("2kYt"),o=s("CAH9"),n=s("PCNd"),i=s("sEIs");const c={title:"ToastService Documentation",importReferences:["import { ToastService } from '@atlas/ui-app-shell'","Add AppShellModule to the root NgModule decorator's imports array."],services:[{name:"ToastService",description:"Facilitates the display of and interaction with toast messages.",constructorParams:[{name:"overlay",type:"Overlay"},{name:"parentInjector",type:"Injector"}],implements:["IToastService","OnDestroy"],properties:[{name:"activeToasts$",type:"Observable<ToastRef[]>",description:"Emits when the list of active toasts changes."}],methods:[{name:"showToast",type:"ToastRef",description:"Adds a new toast to the list of active toasts and displays it in an overlay for the user."}]}],interfaces:[{name:"ToastData",description:"Options that control the display and user-interaction for toast notifications.",properties:[{name:"autoHideDelay",type:"number",description:"The amount of time, in milliseconds, after which the toast is automatically hidden. A falsey value will disable the auto-hide."},{name:"classes",type:"string[]",description:"CSS classes to be added to the toast element."},{name:"title",type:"string",description:"The title text to be displayed in the toast."},{name:"message",type:"string",description:"The message text to be displayed in the toast."},{name:"icon",type:"string",description:"The name of the icon to display in the toast."},{name:"iconFontSet",type:"string",description:"The name of the icon font-set to use for the icon in the toast. (Omit for the default Material font-set.) Ex: 'fas' for Font-Awesome Solid."},{name:"iconColor",type:"string",description:"The color palette to use for the toast's icon. Ex: 'primary' or 'accent'."},{name:"click",type:"(toastRef: ToastRef) => any",description:"A callback to be invoked when the user click's on the toast."},{name:"template",type:"TemplateRef",description:"If specified, causes the toast to display the template's contents, instead of a title and message."},{name:"templateContext",type:"object",description:"Specifies the context object against which the template is evaluated."}]},{name:"IToastService",description:"Abstract representation of toast service API contract. (for internal use)",properties:[{name:"activeToasts$",type:"Observable<ToastRef[]>",description:"Emits when the list of active toasts changes."}],methods:[{name:"showToast",type:"ToastRef",description:"Adds a new toast to the list of active toasts and displays it in an overlay for the user."}]}],classes:[{name:"ToastRef",description:"A handle to a toast message shown by the toast service. Used to manipulate a toast after it is displayed.",constructorParams:[{name:"data",type:"ToastData",description:"The configuration associated with the toast instance."},{name:"_dispose",type:"(ref: ToastRef) => any"}],properties:[{name:"data",type:"ToastData",description:"The configuration associated with the toast instance."},{name:"id",type:"string",description:"Uniquely identifies the toast instance."},{name:"animationState$",type:"Observable<ToastAnimationState>",description:"Emits when the animation state of the toast changes."},{name:"autoDismissPending",type:"boolean",description:"Indicates whether a auto-dismiss is pending or not."}],methods:[{name:"beginDismiss",type:"void",description:"Starts the process of dismissing the toast.  This is the typical method for dismissing the toast represented by this ToastRef."},{name:"dismiss",type:"void",description:"Hides and properly disposes of the toast immediately.  This can be used when immediate dismissal is desired."},{name:"beginAutoDismiss",type:"void",description:"Starts the process of auto-dismissing the toast after the specified delay. If an auto-hide is already pending, it will not be started again.",arguments:[{name:"delay",type:"number",description:"(optional) Allows the caller to override the value from ToastData.autoHideDelay."}]},{name:"cancelAutoDismiss",type:"void",description:"Cancels the process of auto-dismissing the toast; and optionally resets the toast's animation state.",arguments:[{name:"resetAnimationState",type:"boolean",description:"(optional) Allows the caller to override the default behavior of resetting the toast's animation state. Default: true"}]}]}]};var r=s("EM62"),l=s("vfg2");let m=(()=>{class e{constructor(){this.apiModel=c}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-api"]],decls:1,vars:1,consts:[["title","Atlas Toast Service",3,"api"]],template:function(e,t){1&e&&r["\u0275\u0275element"](0,"atlas-shared-docs-api",0),2&e&&r["\u0275\u0275property"]("api",t.apiModel)},directives:[l.a],encapsulation:2,changeDetection:0}),e})();var p=s("JcM3");const d=function(){return["summary","api","theming","example"]};let h=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-doc"]],decls:2,vars:2,consts:[[3,"options"]],template:function(e,t){1&e&&(r["\u0275\u0275elementStart"](0,"atlas-shared-docs-container",0),r["\u0275\u0275element"](1,"router-outlet"),r["\u0275\u0275elementEnd"]()),2&e&&r["\u0275\u0275property"]("options",r["\u0275\u0275pureFunction0"](1,d))},directives:[p.a,i.m],encapsulation:2,changeDetection:0}),e})();var u=s("C05f"),f=s("8j5Y"),y=s("HLuz"),v=s("J1ZJ"),T=s("RVkH"),g=s("VYW9"),w=s("5Bw9"),b=s("PBFl");const S=["toastTemplateB"];function x(e,t){if(1&e&&(r["\u0275\u0275elementStart"](0,"div",3),r["\u0275\u0275elementStart"](1,"h2"),r["\u0275\u0275text"](2),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementEnd"]()),2&e){const e=t.$implicit;r["\u0275\u0275advance"](2),r["\u0275\u0275textInterpolate1"]("Hello ",e.userName,"!")}}let E=(()=>{class e{constructor(e){this.toastService=e}showTestToastA(){const e=this.toastService.showToast({autoHideDelay:5e3,classes:["test-custom-toast-class-a"],title:"Test toast title A",message:"This is just a test of the emergency toast broadcast system.",icon:"build",iconColor:"warn"});console.log("New toast A ref",e)}showTestToastB(){const e=this.toastService.showToast({classes:["toast-accent"],icon:"done",template:this.toastTemplateRef,templateContext:{userName:"Test User"},click:e=>{alert(`Toast ${e.id} click!`),e.beginDismiss()}});console.log("New toast B ref",e)}}return e.\u0275fac=function(t){return new(t||e)(r["\u0275\u0275directiveInject"](w.R))},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-demo"]],viewQuery:function(e,t){var s;1&e&&r["\u0275\u0275viewQuery"](S,!0,r.TemplateRef),2&e&&r["\u0275\u0275queryRefresh"](s=r["\u0275\u0275loadQuery"]())&&(t.toastTemplateRef=s.first)},decls:7,vars:0,consts:[["type","button","mat-flat-button","","color","primary",3,"click"],["type","button","mat-flat-button","","color","accent",3,"click"],["toastTemplateB",""],[1,"custom-toast-content-b"]],template:function(e,t){1&e&&(r["\u0275\u0275elementStart"](0,"button",0),r["\u0275\u0275listener"]("click",(function(){return t.showTestToastA()})),r["\u0275\u0275text"](1,"Test Toast A"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275text"](2,"\xa0\n"),r["\u0275\u0275elementStart"](3,"button",1),r["\u0275\u0275listener"]("click",(function(){return t.showTestToastB()})),r["\u0275\u0275text"](4,"Test Toast B"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275template"](5,x,3,1,"ng-template",null,2,r["\u0275\u0275templateRefExtractor"]))},directives:[b.b],encapsulation:2,changeDetection:0}),e})(),A=(()=>{class e{constructor(e){this.codeFileService=e,this.exammpleCodeFiles$=new u.a(null),this.codeFileService.loadFiles(["assets/example-files/toast-service-demo/toast-service-demo.component.html","assets/example-files/toast-service-demo/toast-service-demo.component.ts","assets/example-files/toast-service-demo/toast-service-demo.component.scss","assets/example-files/toast-service-demo/toast-service-demo.theme.scss"]).pipe(Object(f.a)(e=>this.exammpleCodeFiles$.next(e))).subscribe()}}return e.\u0275fac=function(t){return new(t||e)(r["\u0275\u0275directiveInject"](y.a))},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-example"]],decls:7,vars:3,consts:[["title","Atlas Toast Service"],[3,"codeExample"]],template:function(e,t){1&e&&(r["\u0275\u0275elementStart"](0,"atlas-shared-docs-example",0),r["\u0275\u0275elementStart"](1,"atlas-code-example",1),r["\u0275\u0275pipe"](2,"async"),r["\u0275\u0275elementStart"](3,"atlas-code-example-header"),r["\u0275\u0275elementStart"](4,"h3"),r["\u0275\u0275text"](5,"Example Code"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementEnd"](),r["\u0275\u0275element"](6,"atlas-toast-service-demo"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementEnd"]()),2&e&&(r["\u0275\u0275advance"](1),r["\u0275\u0275property"]("codeExample",r["\u0275\u0275pipeBind1"](2,1,t.exammpleCodeFiles$)))},directives:[v.a,T.a,g.a,E],pipes:[a.b],encapsulation:2,changeDetection:0}),e})();var C=s("ZRBK");function D(e,t){if(1&e&&(r["\u0275\u0275elementStart"](0,"li",1),r["\u0275\u0275text"](1),r["\u0275\u0275elementEnd"]()),2&e){const e=t.$implicit;r["\u0275\u0275property"]("ngClass","fg-"+e),r["\u0275\u0275advance"](1),r["\u0275\u0275textInterpolate1"](" toast-",e," ")}}const k=[{path:"",component:h,children:[{path:"summary",component:(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-summary"]],decls:12,vars:0,consts:[["title","Atlas Toast Service"]],template:function(e,t){1&e&&(r["\u0275\u0275elementStart"](0,"atlas-shared-docs-summary",0),r["\u0275\u0275elementStart"](1,"p"),r["\u0275\u0275text"](2," The "),r["\u0275\u0275elementStart"](3,"code"),r["\u0275\u0275text"](4,"ToastService"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275text"](5," allows applications to display toast notifications to the user. Each toast notification can be heavily customized, or it can be just a simple text title and message. The toasts can also be set to auto-hide after a specified delay. The "),r["\u0275\u0275elementStart"](6,"code"),r["\u0275\u0275text"](7,"ToastService.showToast"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275text"](8," method, used to display a toast, returns a "),r["\u0275\u0275elementStart"](9,"code"),r["\u0275\u0275text"](10,"ToastRef"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275text"](11," object that allows the calling code to manipulate the toast in various ways; including dismissing the toast and beginning the process of auto-dismissing the toast. A click event handler callback can be specified in a toast's options, which will be invoked when the user clicks or touches the toast. "),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementEnd"]())},directives:[C.a],encapsulation:2,changeDetection:0}),e})()},{path:"api",component:m},{path:"theming",component:(()=>{class e{constructor(){this.paletteNames=["primary","accent","caution","warn","secondary-accent","tertiary-accent","neutral","brand","success"]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r["\u0275\u0275defineComponent"]({type:e,selectors:[["atlas-toast-service-theming"]],decls:9,vars:1,consts:[[3,"ngClass",4,"ngFor","ngForOf"],[3,"ngClass"]],template:function(e,t){1&e&&(r["\u0275\u0275elementStart"](0,"h2"),r["\u0275\u0275text"](1,"Atlas Toast Service Theming"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementStart"](2,"p"),r["\u0275\u0275text"](3," There are several inbuilt theme classes that can be used with the "),r["\u0275\u0275elementStart"](4,"code"),r["\u0275\u0275text"](5,"ToastData.classes"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275text"](6," property; one for each palette in a theme.\n"),r["\u0275\u0275elementEnd"](),r["\u0275\u0275elementStart"](7,"ul"),r["\u0275\u0275template"](8,D,2,2,"li",0),r["\u0275\u0275elementEnd"]()),2&e&&(r["\u0275\u0275advance"](8),r["\u0275\u0275property"]("ngForOf",t.paletteNames))},directives:[a.k,a.j],encapsulation:2,changeDetection:0}),e})()},{path:"example",component:A},{path:"**",redirectTo:"summary"}]}];let R=(()=>{class e{}return e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[i.l.forChild(k)],i.l]}),e})(),I=(()=>{class e{}return e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[a.c,o.c,n.a,R]]}),e})()}}]);