!function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function n(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"6zcx":function(t,o,i){"use strict";i.r(o),i.d(o,"ContentResizeObserverDocModule",(function(){return H}));var s,r,a=i("2kYt"),c=i("CAH9"),l=i("PCNd"),p=i("sEIs"),m={title:"ContentResizeObserver Documentation",importReferences:["import { ContentResizeObserver } from '@atlas/ui-core';","Add AtlasUiCoreModule.forRoot(...) to the root NgModule decorator's imports array to use the directive."],directives:[{name:"ObserveResizeDirective",selector:"[observeResize]",description:"Directive that triggers a callback whenever the size of its associated element has changed.",inputs:[{name:"observeResizeDisabled",type:"boolean",description:"Whether observing content is disabled. This option can be used to disconnect the underlying ResizeObserver until it is needed."},{name:"observeResizeDebounce",type:"number",description:"Debounce interval for emitting the changes."}],outputs:[{name:"observeResize (self)",type:"EventEmitter<ResizeObserverEntry[]>",description:"Emits for each change in the element's size."}]}],services:[{name:"ContentResizeObserverFactory",description:"Injectable factory service responsible for constructing the underlying ResizeObserver to be used by ContentResizeObserver.",methods:[{name:"create",type:"ResizeObserver (native)",arguments:[{name:"callback",type:"ResizeObserverCallback (native)",description:"The callback that is called when the monitored element's size changes. See the documentation for the ResizeObserver browser API for more details."}]}]},{name:"ContentResizeObserver",description:"Injectable service used to monitor the size of specific DOM elements within a component's view.",constructorParams:[{name:"_resizeObserverFactory",type:"ResizeObserverFactory",description:"The factory responsible for constructing the underlying ResizeObserver."}],methods:[{name:"observe",type:"Observable<ResizeObserverEntry[]>",description:"Used to start monitoring an element's size. Monitoring stops when the returned observable no longer has subscribers.",arguments:[{name:"element",type:"Element",description:"The native Element object to monitor."},{name:"options",type:"ContentResizeObserverOptions",description:"(Optional) The options that customize the behavior of the monitoring."}]},{name:"observe",type:"Observable<ResizeObserverEntry[]>",description:"Used to start monitoring an element's size. Monitoring stops when the returned observable no longer has subscribers.",arguments:[{name:"element",type:"ElementRef<Element>",description:"The ElementRef object to monitor."},{name:"options",type:"ContentResizeObserverOptions",description:"(Optional) The options that customize the behavior of the monitoring."}]}]}],interfaces:[{name:"ContentResizeObserverOptions",description:"The options that customize the behavior of the ContentResizeObserver for a specific element to be monitored.",properties:[{name:"box",type:"'content-box' | 'border-box' | 'device-pixel-content-box'",description:"Sets which box model the observer will observe changes to."}]}]},d=i("EM62"),u=i("vfg2"),h=((s=function(){function t(){e(this,t),this.apiModel=m}return n(t,[{key:"ngOnInit",value:function(){}}]),t}()).\u0275fac=function(e){return new(e||s)},s.\u0275cmp=d["\u0275\u0275defineComponent"]({type:s,selectors:[["atlas-content-resize-observer-api"]],decls:1,vars:1,consts:[["title","Atlas Content Resize Observer",3,"api"]],template:function(e,t){1&e&&d["\u0275\u0275element"](0,"atlas-shared-docs-api",0),2&e&&d["\u0275\u0275property"]("api",t.apiModel)},directives:[u.a],encapsulation:2,changeDetection:0}),s),b=i("JcM3"),v=function(){return["summary","api","example"]},f=((r=function(){function t(){e(this,t)}return n(t,[{key:"ngOnInit",value:function(){}}]),t}()).\u0275fac=function(e){return new(e||r)},r.\u0275cmp=d["\u0275\u0275defineComponent"]({type:r,selectors:[["atlas-content-resize-observer-doc"]],decls:2,vars:2,consts:[[3,"options"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-container",0),d["\u0275\u0275element"](1,"router-outlet"),d["\u0275\u0275elementEnd"]()),2&e&&d["\u0275\u0275property"]("options",d["\u0275\u0275pureFunction0"](1,v))},directives:[b.a,p.m],encapsulation:2,changeDetection:0}),r),z=i("C05f"),y=i("8j5Y"),g=i("HLuz"),C=i("J1ZJ"),x=i("RVkH"),O=i("VYW9"),w=i("29Wa"),S=i("Cd2c"),R=i("PBFl"),E=i("bFHC"),I=i("zmEM");function j(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"div",7),d["\u0275\u0275text"](1),d["\u0275\u0275elementEnd"]()),2&e){var n=t.ngIf;d["\u0275\u0275advance"](1),d["\u0275\u0275textInterpolate2"](" Width:\xa0",n.width,"\xa0\xa0Height:\xa0",n.height,"\n")}}function k(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"p"),d["\u0275\u0275text"](1),d["\u0275\u0275elementEnd"]()),2&e){var n=t.$implicit;d["\u0275\u0275advance"](1),d["\u0275\u0275textInterpolate"](n)}}var T,F,_,D,M,A=((F=function(){function t(){e(this,t),this._contentSizeSubject=new z.a(null),this._testContentSubject=new z.a(["This is just a test."]),this._testContentInputSubject=new z.a(""),this.contentSize$=this._contentSizeSubject.asObservable(),this.testContent$=this._testContentSubject.asObservable(),this.testContentInput$=this._testContentInputSubject.asObservable()}return n(t,[{key:"setTestContentInput",value:function(e){this._testContentInputSubject.next(e)}},{key:"onClearTestContent",value:function(){this._testContentSubject.next([])}},{key:"onAddTestContent",value:function(){var e=this._testContentInputSubject.getValue();(null==e?void 0:e.length)&&this._testContentSubject.next((this._testContentSubject.getValue()||[]).concat([e]))}},{key:"onContentResized",value:function(e){if(null==e?void 0:e.length){var t=e[0].contentRect;console.log("Content size changed:",t),this._contentSizeSubject.next(t)}}}]),t}()).\u0275fac=function(e){return new(e||F)},F.\u0275cmp=d["\u0275\u0275defineComponent"]({type:F,selectors:[["atlas-observe-resize-example"]],decls:14,vars:9,consts:[[2,"display","block"],["matInput","","type","text","placeholder","Test content to add",3,"value","input"],["testInput",""],["type","button","mat-icon-button","","matSuffix","",3,"click"],["class","content-size-display mat-body-strong",4,"ngIf"],[1,"content-to-observe",3,"observeResize"],[4,"ngFor","ngForOf"],[1,"content-size-display","mat-body-strong"]],template:function(e,t){if(1&e){var n=d["\u0275\u0275getCurrentView"]();d["\u0275\u0275elementStart"](0,"mat-form-field",0),d["\u0275\u0275elementStart"](1,"input",1,2),d["\u0275\u0275listener"]("input",(function(){d["\u0275\u0275restoreView"](n);var e=d["\u0275\u0275reference"](2);return t.setTestContentInput(e.value)})),d["\u0275\u0275pipe"](3,"async"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](4,"button",3),d["\u0275\u0275listener"]("click",(function(){return t.onAddTestContent()})),d["\u0275\u0275elementStart"](5,"mat-icon"),d["\u0275\u0275text"](6,"add"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275template"](7,j,2,2,"div",4),d["\u0275\u0275pipe"](8,"async"),d["\u0275\u0275element"](9,"mat-divider"),d["\u0275\u0275element"](10,"br"),d["\u0275\u0275elementStart"](11,"div",5),d["\u0275\u0275listener"]("observeResize",(function(e){return t.onContentResized(e)})),d["\u0275\u0275template"](12,k,2,1,"p",6),d["\u0275\u0275pipe"](13,"async"),d["\u0275\u0275elementEnd"]()}2&e&&(d["\u0275\u0275advance"](1),d["\u0275\u0275property"]("value",d["\u0275\u0275pipeBind1"](3,3,t.testContentInput$)),d["\u0275\u0275advance"](6),d["\u0275\u0275property"]("ngIf",d["\u0275\u0275pipeBind1"](8,5,t.contentSize$)),d["\u0275\u0275advance"](5),d["\u0275\u0275property"]("ngForOf",d["\u0275\u0275pipeBind1"](13,7,t.testContent$)))},directives:[w.d,S.b,R.b,w.i,E.a,a.l,I.a,c.w,a.k],pipes:[a.b],encapsulation:2,changeDetection:0}),F),$=((T=function t(n){var o=this;e(this,t),this.codeFileService=n,this.exammpleCodeFiles$=new z.a(null),this.codeFileService.loadFiles(["assets/example-files/content-resize-observer/observe-resize-example.component.html","assets/example-files/content-resize-observer/observe-resize-example.component.ts"]).pipe(Object(y.a)((function(e){return o.exammpleCodeFiles$.next(e)}))).subscribe()}).\u0275fac=function(e){return new(e||T)(d["\u0275\u0275directiveInject"](g.a))},T.\u0275cmp=d["\u0275\u0275defineComponent"]({type:T,selectors:[["atlas-content-resize-observer-example"]],decls:7,vars:3,consts:[["title","Atlas Content Resize Observer"],[3,"codeExample"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-example",0),d["\u0275\u0275elementStart"](1,"atlas-code-example",1),d["\u0275\u0275pipe"](2,"async"),d["\u0275\u0275elementStart"](3,"atlas-code-example-header"),d["\u0275\u0275elementStart"](4,"h3"),d["\u0275\u0275text"](5,"Example Code"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](6,"atlas-observe-resize-example"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e&&(d["\u0275\u0275advance"](1),d["\u0275\u0275property"]("codeExample",d["\u0275\u0275pipeBind1"](2,1,t.exammpleCodeFiles$)))},directives:[C.a,x.a,O.a,A],pipes:[a.b],encapsulation:2,changeDetection:0}),T),P=i("ZRBK"),B=[{path:"",component:f,children:[{path:"summary",component:(_=function(){function t(){e(this,t)}return n(t,[{key:"ngOnInit",value:function(){}}]),t}(),_.\u0275fac=function(e){return new(e||_)},_.\u0275cmp=d["\u0275\u0275defineComponent"]({type:_,selectors:[["atlas-content-resize-observer-summary"]],decls:25,vars:0,consts:[["title","Atlas Content Resize Observer"],["target","_blank","href","https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-summary",0),d["\u0275\u0275elementStart"](1,"p"),d["\u0275\u0275text"](2," The "),d["\u0275\u0275elementStart"](3,"code"),d["\u0275\u0275text"](4,"ContentResizeObserver"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](5," service allows components to monitor the size of specific elements within its view and react to changes in the size of the elements being monitored. For the browser platform, it uses the "),d["\u0275\u0275elementStart"](6,"code"),d["\u0275\u0275text"](7,"ResizeObserver"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](8," API that is widely supported by all major browsers. This approach is much more efficient and robust than using the "),d["\u0275\u0275elementStart"](9,"code"),d["\u0275\u0275text"](10,"window"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](11,"code"),d["\u0275\u0275text"](12,"resize"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](13," event, as it observes changes not only to the window size, but also changes to content within and around the monitored element. For example, if an element within the monitored element is hidden or made visible and that changes the size of the monitored element, the "),d["\u0275\u0275elementStart"](14,"code"),d["\u0275\u0275text"](15,"ContentResizeObserver"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](16," can react to that change. "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](17,"p"),d["\u0275\u0275text"](18," For more information on the "),d["\u0275\u0275elementStart"](19,"code"),d["\u0275\u0275text"](20,"ResizeObserver"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](21," API provided by browsers, see this "),d["\u0275\u0275elementStart"](22,"a",1),d["\u0275\u0275text"](23,"link"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](24,". "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]())},directives:[P.a],encapsulation:2,changeDetection:0}),_)},{path:"api",component:h},{path:"example",component:$},{path:"**",redirectTo:"summary"}]}],V=((M=function t(){e(this,t)}).\u0275mod=d["\u0275\u0275defineNgModule"]({type:M}),M.\u0275inj=d["\u0275\u0275defineInjector"]({factory:function(e){return new(e||M)},imports:[[p.l.forChild(B)],p.l]}),M),H=((D=function t(){e(this,t)}).\u0275mod=d["\u0275\u0275defineNgModule"]({type:D}),D.\u0275inj=d["\u0275\u0275defineInjector"]({factory:function(e){return new(e||D)},imports:[[a.c,c.c,l.a,V]]}),D)}}])}();