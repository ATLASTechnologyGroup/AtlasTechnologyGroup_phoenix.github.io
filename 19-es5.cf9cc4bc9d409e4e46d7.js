!function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var a=0;a<t.length;a++){var s=t[a];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function a(e,a,s){return a&&t(e.prototype,a),s&&t(e,s),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{keA1:function(t,s,n){"use strict";n.r(s),n.d(s,"ToastServiceDocModule",(function(){return J}));var o,i,c=n("2kYt"),r=n("CAH9"),l=n("PCNd"),m=n("sEIs"),p={title:"ToastService Documentation",importReferences:["import { ToastService } from '@atlas/ui-app-shell'","Add AppShellModule to the root NgModule decorator's imports array."],services:[{name:"ToastService",description:"Facilitates the display of and interaction with toast messages.",constructorParams:[{name:"overlay",type:"Overlay"},{name:"parentInjector",type:"Injector"}],implements:["IToastService","OnDestroy"],properties:[{name:"activeToasts$",type:"Observable<ToastRef[]>",description:"Emits when the list of active toasts changes."}],methods:[{name:"showToast",type:"ToastRef",description:"Adds a new toast to the list of active toasts and displays it in an overlay for the user."}]}],interfaces:[{name:"ToastData",description:"Options that control the display and user-interaction for toast notifications.",properties:[{name:"autoHideDelay",type:"number",description:"The amount of time, in milliseconds, after which the toast is automatically hidden. A falsey value will disable the auto-hide."},{name:"classes",type:"string[]",description:"CSS classes to be added to the toast element."},{name:"title",type:"string",description:"The title text to be displayed in the toast."},{name:"message",type:"string",description:"The message text to be displayed in the toast."},{name:"icon",type:"string",description:"The name of the icon to display in the toast."},{name:"iconFontSet",type:"string",description:"The name of the icon font-set to use for the icon in the toast. (Omit for the default Material font-set.) Ex: 'fas' for Font-Awesome Solid."},{name:"iconColor",type:"string",description:"The color palette to use for the toast's icon. Ex: 'primary' or 'accent'."},{name:"click",type:"(toastRef: ToastRef) => any",description:"A callback to be invoked when the user click's on the toast."},{name:"template",type:"TemplateRef",description:"If specified, causes the toast to display the template's contents, instead of a title and message."},{name:"templateContext",type:"object",description:"Specifies the context object against which the template is evaluated."}]},{name:"IToastService",description:"Abstract representation of toast service API contract. (for internal use)",properties:[{name:"activeToasts$",type:"Observable<ToastRef[]>",description:"Emits when the list of active toasts changes."}],methods:[{name:"showToast",type:"ToastRef",description:"Adds a new toast to the list of active toasts and displays it in an overlay for the user."}]}],classes:[{name:"ToastRef",description:"A handle to a toast message shown by the toast service. Used to manipulate a toast after it is displayed.",constructorParams:[{name:"data",type:"ToastData",description:"The configuration associated with the toast instance."},{name:"_dispose",type:"(ref: ToastRef) => any"}],properties:[{name:"data",type:"ToastData",description:"The configuration associated with the toast instance."},{name:"id",type:"string",description:"Uniquely identifies the toast instance."},{name:"animationState$",type:"Observable<ToastAnimationState>",description:"Emits when the animation state of the toast changes."},{name:"autoDismissPending",type:"boolean",description:"Indicates whether a auto-dismiss is pending or not."}],methods:[{name:"beginDismiss",type:"void",description:"Starts the process of dismissing the toast.  This is the typical method for dismissing the toast represented by this ToastRef."},{name:"dismiss",type:"void",description:"Hides and properly disposes of the toast immediately.  This can be used when immediate dismissal is desired."},{name:"beginAutoDismiss",type:"void",description:"Starts the process of auto-dismissing the toast after the specified delay. If an auto-hide is already pending, it will not be started again.",arguments:[{name:"delay",type:"number",description:"(optional) Allows the caller to override the value from ToastData.autoHideDelay."}]},{name:"cancelAutoDismiss",type:"void",description:"Cancels the process of auto-dismissing the toast; and optionally resets the toast's animation state.",arguments:[{name:"resetAnimationState",type:"boolean",description:"(optional) Allows the caller to override the default behavior of resetting the toast's animation state. Default: true"}]}]}]},d=n("EM62"),h=n("vfg2"),u=((o=function(){function t(){e(this,t),this.apiModel=p}return a(t,[{key:"ngOnInit",value:function(){}}]),t}()).\u0275fac=function(e){return new(e||o)},o.\u0275cmp=d["\u0275\u0275defineComponent"]({type:o,selectors:[["atlas-toast-service-api"]],decls:1,vars:1,consts:[["title","Atlas Toast Service",3,"api"]],template:function(e,t){1&e&&d["\u0275\u0275element"](0,"atlas-shared-docs-api",0),2&e&&d["\u0275\u0275property"]("api",t.apiModel)},directives:[h.a],encapsulation:2,changeDetection:0}),o),f=n("JcM3"),y=function(){return["summary","api","theming","example"]},v=((i=function(){function t(){e(this,t)}return a(t,[{key:"ngOnInit",value:function(){}}]),t}()).\u0275fac=function(e){return new(e||i)},i.\u0275cmp=d["\u0275\u0275defineComponent"]({type:i,selectors:[["atlas-toast-service-doc"]],decls:2,vars:2,consts:[[3,"options"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-container",0),d["\u0275\u0275element"](1,"router-outlet"),d["\u0275\u0275elementEnd"]()),2&e&&d["\u0275\u0275property"]("options",d["\u0275\u0275pureFunction0"](1,y))},directives:[f.a,m.m],encapsulation:2,changeDetection:0}),i),T=n("C05f"),g=n("8j5Y"),w=n("HLuz"),b=n("J1ZJ"),S=n("RVkH"),x=n("VYW9"),E=n("5Bw9"),A=n("PBFl"),k=["toastTemplateB"];function C(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"div",3),d["\u0275\u0275elementStart"](1,"h2"),d["\u0275\u0275text"](2),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e){var a=t.$implicit;d["\u0275\u0275advance"](2),d["\u0275\u0275textInterpolate1"]("Hello ",a.userName,"!")}}var D,R,I=((R=function(){function t(a){e(this,t),this.toastService=a}return a(t,[{key:"showTestToastA",value:function(){var e=this.toastService.showToast({autoHideDelay:5e3,classes:["test-custom-toast-class-a"],title:"Test toast title A",message:"This is just a test of the emergency toast broadcast system.",icon:"build",iconColor:"warn"});console.log("New toast A ref",e)}},{key:"showTestToastB",value:function(){var e=this.toastService.showToast({classes:["toast-accent"],icon:"done",template:this.toastTemplateRef,templateContext:{userName:"Test User"},click:function(e){alert("Toast ".concat(e.id," click!")),e.beginDismiss()}});console.log("New toast B ref",e)}}]),t}()).\u0275fac=function(e){return new(e||R)(d["\u0275\u0275directiveInject"](E.R))},R.\u0275cmp=d["\u0275\u0275defineComponent"]({type:R,selectors:[["atlas-toast-service-demo"]],viewQuery:function(e,t){var a;1&e&&d["\u0275\u0275viewQuery"](k,!0,d.TemplateRef),2&e&&d["\u0275\u0275queryRefresh"](a=d["\u0275\u0275loadQuery"]())&&(t.toastTemplateRef=a.first)},decls:7,vars:0,consts:[["type","button","mat-flat-button","","color","primary",3,"click"],["type","button","mat-flat-button","","color","accent",3,"click"],["toastTemplateB",""],[1,"custom-toast-content-b"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"button",0),d["\u0275\u0275listener"]("click",(function(){return t.showTestToastA()})),d["\u0275\u0275text"](1,"Test Toast A"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](2,"\xa0\n"),d["\u0275\u0275elementStart"](3,"button",1),d["\u0275\u0275listener"]("click",(function(){return t.showTestToastB()})),d["\u0275\u0275text"](4,"Test Toast B"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275template"](5,C,3,1,"ng-template",null,2,d["\u0275\u0275templateRefExtractor"]))},directives:[A.b],encapsulation:2,changeDetection:0}),R),j=((D=function t(a){var s=this;e(this,t),this.codeFileService=a,this.exammpleCodeFiles$=new T.a(null),this.codeFileService.loadFiles(["assets/example-files/toast-service-demo/toast-service-demo.component.html","assets/example-files/toast-service-demo/toast-service-demo.component.ts","assets/example-files/toast-service-demo/toast-service-demo.component.scss","assets/example-files/toast-service-demo/toast-service-demo.theme.scss"]).pipe(Object(g.a)((function(e){return s.exammpleCodeFiles$.next(e)}))).subscribe()}).\u0275fac=function(e){return new(e||D)(d["\u0275\u0275directiveInject"](w.a))},D.\u0275cmp=d["\u0275\u0275defineComponent"]({type:D,selectors:[["atlas-toast-service-example"]],decls:7,vars:3,consts:[["title","Atlas Toast Service"],[3,"codeExample"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-example",0),d["\u0275\u0275elementStart"](1,"atlas-code-example",1),d["\u0275\u0275pipe"](2,"async"),d["\u0275\u0275elementStart"](3,"atlas-code-example-header"),d["\u0275\u0275elementStart"](4,"h3"),d["\u0275\u0275text"](5,"Example Code"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](6,"atlas-toast-service-demo"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e&&(d["\u0275\u0275advance"](1),d["\u0275\u0275property"]("codeExample",d["\u0275\u0275pipeBind1"](2,1,t.exammpleCodeFiles$)))},directives:[b.a,S.a,x.a,I],pipes:[c.b],encapsulation:2,changeDetection:0}),D),F=n("ZRBK");function O(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"li",1),d["\u0275\u0275text"](1),d["\u0275\u0275elementEnd"]()),2&e){var a=t.$implicit;d["\u0275\u0275property"]("ngClass","fg-"+a),d["\u0275\u0275advance"](1),d["\u0275\u0275textInterpolate1"](" toast-",a," ")}}var B,M,N,H,$=[{path:"",component:v,children:[{path:"summary",component:(M=function(){function t(){e(this,t)}return a(t,[{key:"ngOnInit",value:function(){}}]),t}(),M.\u0275fac=function(e){return new(e||M)},M.\u0275cmp=d["\u0275\u0275defineComponent"]({type:M,selectors:[["atlas-toast-service-summary"]],decls:12,vars:0,consts:[["title","Atlas Toast Service"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"atlas-shared-docs-summary",0),d["\u0275\u0275elementStart"](1,"p"),d["\u0275\u0275text"](2," The "),d["\u0275\u0275elementStart"](3,"code"),d["\u0275\u0275text"](4,"ToastService"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](5," allows applications to display toast notifications to the user. Each toast notification can be heavily customized, or it can be just a simple text title and message. The toasts can also be set to auto-hide after a specified delay. The "),d["\u0275\u0275elementStart"](6,"code"),d["\u0275\u0275text"](7,"ToastService.showToast"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](8," method, used to display a toast, returns a "),d["\u0275\u0275elementStart"](9,"code"),d["\u0275\u0275text"](10,"ToastRef"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](11," object that allows the calling code to manipulate the toast in various ways; including dismissing the toast and beginning the process of auto-dismissing the toast. A click event handler callback can be specified in a toast's options, which will be invoked when the user clicks or touches the toast. "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]())},directives:[F.a],encapsulation:2,changeDetection:0}),M)},{path:"api",component:u},{path:"theming",component:(B=function t(){e(this,t),this.paletteNames=["primary","accent","caution","warn","secondary-accent","tertiary-accent","neutral","brand","success"]},B.\u0275fac=function(e){return new(e||B)},B.\u0275cmp=d["\u0275\u0275defineComponent"]({type:B,selectors:[["atlas-toast-service-theming"]],decls:9,vars:1,consts:[[3,"ngClass",4,"ngFor","ngForOf"],[3,"ngClass"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"h2"),d["\u0275\u0275text"](1,"Atlas Toast Service Theming"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](2,"p"),d["\u0275\u0275text"](3," There are several inbuilt theme classes that can be used with the "),d["\u0275\u0275elementStart"](4,"code"),d["\u0275\u0275text"](5,"ToastData.classes"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](6," property; one for each palette in a theme.\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](7,"ul"),d["\u0275\u0275template"](8,O,2,2,"li",0),d["\u0275\u0275elementEnd"]()),2&e&&(d["\u0275\u0275advance"](8),d["\u0275\u0275property"]("ngForOf",t.paletteNames))},directives:[c.k,c.j],encapsulation:2,changeDetection:0}),B)},{path:"example",component:j},{path:"**",redirectTo:"summary"}]}],P=((H=function t(){e(this,t)}).\u0275mod=d["\u0275\u0275defineNgModule"]({type:H}),H.\u0275inj=d["\u0275\u0275defineInjector"]({factory:function(e){return new(e||H)},imports:[[m.l.forChild($)],m.l]}),H),J=((N=function t(){e(this,t)}).\u0275mod=d["\u0275\u0275defineNgModule"]({type:N}),N.\u0275inj=d["\u0275\u0275defineInjector"]({factory:function(e){return new(e||N)},imports:[[c.c,r.c,l.a,P]]}),N)}}])}();